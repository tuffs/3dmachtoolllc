generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id               Int      @id @default(autoincrement())
  name             String
  modelNumber      String
  description      String?
  shortDescription String?
  slug             String
  price            Float
  quantity         Int
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  imageUrls        Json
  tags             String[]
}

model Quotation {
  projectDescription  String
  quantity            Int
  leadTimeWeeks       Int
  material            String
  unitOfMeasurement   String
  tolerance           String
  name                String
  businessName        String
  phoneNumber         String
  emailAddress        String
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  uploadedDesignFiles Json
  id                  Int      @id @default(autoincrement())
  respondedTo         Boolean  @default(false)
}

model Contact {
  name        String
  email       String
  message     String
  createdAt   DateTime @default(now())
  phone       String
  id          Int      @id @default(autoincrement())
  spamScore   Int      @default(0)
  respondedTo Boolean  @default(false)
}

model Admin {
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  id        Int      @id @default(autoincrement())
}

model FloridaSalesTax {
  id        Int      @id @default(autoincrement())
  county    String
  rate      Float
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  zipCode   Int
}

model Order {
  id                           Int      @id @default(autoincrement())
  orderNumber                  String   @unique
  total                        Float
  taxRate                      Float
  taxExemptionStatus           Boolean  @default(false)
  status                       String
  purchasedItems               Json
  createdAt                    DateTime @default(now())
  updatedAt                    DateTime @updatedAt
  shippingName                 String
  shippingAddressOne           String
  shippingAddressTwo           String?
  shippingCity                 String
  shippingState                String
  shippingZipCode              String
  billingDifferentFromShipping Boolean  @default(false)
  billingAddressOne            String?
  billingAddressTwo            String?
  billingCity                  String?
  billingState                 String?
  billingZipCode               String?
  customerId                   Int
  preTaxSubtotal               Float
  stateTax                     Float
  surtax                       Float
  customer                     Customer @relation(fields: [customerId], references: [id])
}

model Customer {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  phone      String?
  password   String?
  name       String
  addressOne String
  addressTwo String?
  city       String
  state      String
  zipCode    String
  createdAt  DateTime @default(now())
  orders     Order[]
}
